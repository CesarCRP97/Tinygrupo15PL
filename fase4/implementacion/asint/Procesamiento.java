package asint;

import asint.SintaxisAbstractaTiny.*;

public interface Procesamiento {
    void procesa(Prog prog);
    void procesa(Bloque bloque);
    void procesa(Si_decs decs);
    void procesa(No_decs decs);
    void procesa(Muchas_decs decs);
    void procesa(Una_dec dec);
    void procesa(Dec_variable dec);
    void procesa(Dec_tipo dec);
    void procesa(Dec_proc dec);
    void procesa(Si_params_form params);
    void procesa(No_params_form params);
    void procesa(Muchos_params_form params);
    void procesa(Un_param_form params);
    void procesa(Param_form_normal param);
    void procesa(Param_form_ref param);
    void procesa(Tipo_int tipo);
    void procesa(Tipo_bool tipo);
    void procesa(Tipo_real tipo);
    void procesa(Tipo_array tipo);
    void procesa(Tipo_string tipo);
    void procesa(Tipo_puntero tipo);
    void procesa(Tipo_struct tipo);
    void procesa(Tipo_iden tipo);
    void procesa(Campos campos);
    void procesa(Muchos_campos campos);
    void procesa(Un_campo campo);
    void procesa(Campo campo);
    void procesa(Si_instrs instrs);
    void procesa(No_instrs instrs);
    void procesa(Muchas_instrs instrs);
    void procesa(Una_instr instr);
    void procesa(Eval instr);
    void procesa(If instr);
    void procesa(IfElse instr);
    void procesa(While instr);
    void procesa(Read instr);
    void procesa(Write instr);
    void procesa(NL instr);
    void procesa(New instr);
    void procesa(Delete instr);
    void procesa(Instr_compuesta instr);
    void procesa(Invoc instr);
    void procesa(Si_params_reales params);
    void procesa(No_params_reales params);
    void procesa(Muchos_params_reales params);
    void procesa(Un_param_real params);
    void procesa(Asignacion exp);
    void procesa(Igual_comp exp);
    void procesa(Distinto_comp exp);
    void procesa(Menor_que exp);
    void procesa(Mayor_que exp);
    void procesa(Menor_igual exp);
    void procesa(Mayor_igual exp);
    void procesa(Suma exp);
    void procesa(Resta exp);
    void procesa(And exp);
    void procesa(Or exp);
    void procesa(Mul exp);
    void procesa(Div exp);
    void procesa(Mod exp);
    void procesa(Menos_unario exp);
    void procesa(Not exp);
    void procesa(Indexacion exp);
    void procesa(Acceso exp);
    void procesa(Indireccion exp);
    void procesa(Lit_ent exp);
    void procesa(Lit_real exp);
    void procesa(True exp);
    void procesa(False exp);
    void procesa(Lit_cadena exp);
    void procesa(Iden exp);
    void procesa(Null exp);
    void procesa(String str);
}
