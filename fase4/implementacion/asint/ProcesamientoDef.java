package asint;

import asint.SintaxisAbstractaTiny.*;

public class ProcesamientoDef implements Procesamiento {
    public void procesa(Prog prog) {};
	public void procesa1(Prog prog) {};
	public void procesa2(Prog prog) {};
    public void procesa(Bloque bloque) {};
	public void procesa1(Bloque bloque) {};
	public void procesa2(Bloque bloque) {};
    public void procesa(Si_decs decs) {};
	public void procesa1(Si_decs decs) {};
	public void procesa2(Si_decs decs) {};
    public void procesa(No_decs decs) {};
	public void procesa1(No_decs decs) {};
	public void procesa2(No_decs decs) {};
    public void procesa(Muchas_decs decs) {};
	public void procesa1(Muchas_decs decs) {};
	public void procesa2(Muchas_decs decs) {};
    public void procesa(Una_dec dec) {};
	public void procesa1(Una_dec dec) {};
	public void procesa2(Una_dec dec) {};
    public void procesa(Dec_variable dec) {};
	public void procesa1(Dec_variable dec) {};
	public void procesa2(Dec_variable dec) {};
    public void procesa(Dec_tipo dec) {};
	public void procesa1(Dec_tipo dec) {};
	public void procesa2(Dec_tipo dec) {};
    public void procesa(Dec_proc dec) {};
	public void procesa1(Dec_proc dec) {};
	public void procesa2(Dec_proc dec) {};
    public void procesa(Si_params_form params) {};
	public void procesa1(Si_params_form params) {};
	public void procesa2(Si_params_form params) {};
    public void procesa(No_params_form params) {};
	public void procesa1(No_params_form params) {};
	public void procesa2(No_params_form params) {};
    public void procesa(Muchos_params_form params) {};
	public void procesa1(Muchos_params_form params) {};
	public void procesa2(Muchos_params_form params) {};
    public void procesa(Un_param_form params) {};
	public void procesa1(Un_param_form params) {};
	public void procesa2(Un_param_form params) {};
    public void procesa(Param_form_normal param) {};
	public void procesa1(Param_form_normal param) {};
	public void procesa2(Param_form_normal param) {};
    public void procesa(Param_form_ref param) {};
	public void procesa1(Param_form_ref param) {};
	public void procesa2(Param_form_ref param) {};
    public void procesa(Tipo_int tipo) {};
	public void procesa1(Tipo_int tipo) {};
	public void procesa2(Tipo_int tipo) {};
    public void procesa(Tipo_bool tipo) {};
	public void procesa1(Tipo_bool tipo) {};
	public void procesa2(Tipo_bool tipo) {};
    public void procesa(Tipo_real tipo) {};
	public void procesa1(Tipo_real tipo) {};
	public void procesa2(Tipo_real tipo) {};
    public void procesa(Tipo_array tipo) {};
	public void procesa1(Tipo_array tipo) {};
	public void procesa2(Tipo_array tipo) {};
    public void procesa(Tipo_string tipo) {};
	public void procesa1(Tipo_string tipo) {};
	public void procesa2(Tipo_string tipo) {};
    public void procesa(Tipo_puntero tipo) {};
	public void procesa1(Tipo_puntero tipo) {};
	public void procesa2(Tipo_puntero tipo) {};
    public void procesa(Tipo_struct tipo) {};
	public void procesa1(Tipo_struct tipo) {};
	public void procesa2(Tipo_struct tipo) {};
    public void procesa(Tipo_iden tipo) {};
	public void procesa1(Tipo_iden tipo) {};
	public void procesa2(Tipo_iden tipo) {};
    public void procesa(Tipo_OK tipo) {};
    public void procesa1(Tipo_OK tipo) {};
    public void procesa2(Tipo_OK tipo) {};
    public void procesa(Tipo_ERROR tipo) {};
    public void procesa1(Tipo_ERROR tipo) {};
    public void procesa2(Tipo_ERROR tipo) {};
    public void procesa(Tipo_null tipo) {};
    public void procesa1(Tipo_null tipo) {};
    public void procesa2(Tipo_null tipo) {};
    public void procesa(Campos campos) {};
	public void procesa1(Campos campos) {};
	public void procesa2(Campos campos) {};
    public void procesa(Muchos_campos campos) {};
	public void procesa1(Muchos_campos campos) {};
	public void procesa2(Muchos_campos campos) {};
    public void procesa(Un_campo campo) {};
	public void procesa1(Un_campo campo) {};
	public void procesa2(Un_campo campo) {};
    public void procesa(Campo campo) {};
	public void procesa1(Campo campo) {};
	public void procesa2(Campo campo) {};
    public void procesa(Si_instrs instrs) {};
	public void procesa1(Si_instrs instrs) {};
	public void procesa2(Si_instrs instrs) {};
    public void procesa(No_instrs instrs) {};
	public void procesa1(No_instrs instrs) {};
	public void procesa2(No_instrs instrs) {};
    public void procesa(Muchas_instrs instrs) {};
	public void procesa1(Muchas_instrs instrs) {};
	public void procesa2(Muchas_instrs instrs) {};
    public void procesa(Una_instr instr) {};
	public void procesa1(Una_instr instr) {};
	public void procesa2(Una_instr instr) {};
    public void procesa(Eval instr) {};
	public void procesa1(Eval instr) {};
	public void procesa2(Eval instr) {};
    public void procesa(If instr) {};
	public void procesa1(If instr) {};
	public void procesa2(If instr) {};
    public void procesa(IfElse instr) {};
	public void procesa1(IfElse instr) {};
	public void procesa2(IfElse instr) {};
    public void procesa(While instr) {};
	public void procesa1(While instr) {};
	public void procesa2(While instr) {};
    public void procesa(Read instr) {};
	public void procesa1(Read instr) {};
	public void procesa2(Read instr) {};
    public void procesa(Write instr) {};
	public void procesa1(Write instr) {};
	public void procesa2(Write instr) {};
    public void procesa(NL instr) {};
	public void procesa1(NL instr) {};
	public void procesa2(NL instr) {};
    public void procesa(New instr) {};
	public void procesa1(New instr) {};
	public void procesa2(New instr) {};
    public void procesa(Delete instr) {};
	public void procesa1(Delete instr) {};
	public void procesa2(Delete instr) {};
    public void procesa(Instr_compuesta instr) {};
	public void procesa1(Instr_compuesta instr) {};
	public void procesa2(Instr_compuesta instr) {};
    public void procesa(Invoc instr) {};
	public void procesa1(Invoc instr) {};
	public void procesa2(Invoc instr) {};
    public void procesa(Si_params_reales params) {};
	public void procesa1(Si_params_reales params) {};
	public void procesa2(Si_params_reales params) {};
    public void procesa(No_params_reales params) {};
	public void procesa1(No_params_reales params) {};
	public void procesa2(No_params_reales params) {};
    public void procesa(Muchos_params_reales params) {};
	public void procesa1(Muchos_params_reales params) {};
	public void procesa2(Muchos_params_reales params) {};
    public void procesa(Un_param_real params) {};
	public void procesa1(Un_param_real params) {};
	public void procesa2(Un_param_real params) {};
    public void procesa(Asignacion exp) {};
	public void procesa1(Asignacion exp) {};
	public void procesa2(Asignacion exp) {};
    public void procesa(Igual_comp exp) {};
	public void procesa1(Igual_comp exp) {};
	public void procesa2(Igual_comp exp) {};
    public void procesa(Distinto_comp exp) {};
	public void procesa1(Distinto_comp exp) {};
	public void procesa2(Distinto_comp exp) {};
    public void procesa(Menor_que exp) {};
	public void procesa1(Menor_que exp) {};
	public void procesa2(Menor_que exp) {};
    public void procesa(Mayor_que exp) {};
	public void procesa1(Mayor_que exp) {};
	public void procesa2(Mayor_que exp) {};
    public void procesa(Menor_igual exp) {};
	public void procesa1(Menor_igual exp) {};
	public void procesa2(Menor_igual exp) {};
    public void procesa(Mayor_igual exp) {};
	public void procesa1(Mayor_igual exp) {};
	public void procesa2(Mayor_igual exp) {};
    public void procesa(Suma exp) {};
	public void procesa1(Suma exp) {};
	public void procesa2(Suma exp) {};
    public void procesa(Resta exp) {};
	public void procesa1(Resta exp) {};
	public void procesa2(Resta exp) {};
    public void procesa(And exp) {};
	public void procesa1(And exp) {};
	public void procesa2(And exp) {};
    public void procesa(Or exp) {};
	public void procesa1(Or exp) {};
	public void procesa2(Or exp) {};
    public void procesa(Mul exp) {};
	public void procesa1(Mul exp) {};
	public void procesa2(Mul exp) {};
    public void procesa(Div exp) {};
	public void procesa1(Div exp) {};
	public void procesa2(Div exp) {};
    public void procesa(Mod exp) {};
	public void procesa1(Mod exp) {};
	public void procesa2(Mod exp) {};
    public void procesa(Menos_unario exp) {};
	public void procesa1(Menos_unario exp) {};
	public void procesa2(Menos_unario exp) {};
    public void procesa(Not exp) {};
	public void procesa1(Not exp) {};
	public void procesa2(Not exp) {};
    public void procesa(Indexacion exp) {};
	public void procesa1(Indexacion exp) {};
	public void procesa2(Indexacion exp) {};
    public void procesa(Acceso exp) {};
	public void procesa1(Acceso exp) {};
	public void procesa2(Acceso exp) {};
    public void procesa(Indireccion exp) {};
	public void procesa1(Indireccion exp) {};
	public void procesa2(Indireccion exp) {};
    public void procesa(Lit_ent exp) {};
	public void procesa1(Lit_ent exp) {};
	public void procesa2(Lit_ent exp) {};
    public void procesa(Lit_real exp) {};
	public void procesa1(Lit_real exp) {};
	public void procesa2(Lit_real exp) {};
    public void procesa(True exp) {};
	public void procesa1(True exp) {};
	public void procesa2(True exp) {};
    public void procesa(False exp) {};
	public void procesa1(False exp) {};
	public void procesa2(False exp) {};
    public void procesa(Lit_cadena exp) {};
	public void procesa1(Lit_cadena exp) {};
	public void procesa2(Lit_cadena exp) {};
    public void procesa(Iden exp) {};
	public void procesa1(Iden exp) {};
	public void procesa2(Iden exp) {};
    public void procesa(Null exp) {};
	public void procesa1(Null exp) {};
	public void procesa2(Null exp) {};
    public void procesa(String str) {};
	public void procesa1(String str) {};
	public void procesa2(String str) {};
}
